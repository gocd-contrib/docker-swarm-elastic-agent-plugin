/*
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'co.riiid.gradle' version '0.4.2'
}

apply plugin: 'java'
apply from: 'plugin-common.gradle'

project.ext.pluginVersion = '4.0.0'
project.ext.fullVersion = project.distVersion ? "${project.pluginVersion}-${project.distVersion}" : project.pluginVersion

group = 'cd.go.contrib'
version = project.fullVersion

description = 'GoCD Docker Swarm Elastic Agents'

project.ext.pluginDesc = [
        id         : 'cd.go.contrib.elastic-agent.docker-swarm',
        version    : project.version,
        goCdVersion: '18.10.0',
        name       : 'GoCD Docker Swarm Elastic Agents',
        description: 'Docker Swarm Based Elastic Agent Plugins for GoCD',
        vendorName : 'GoCD Contributors',
        vendorUrl  : 'https://github.com/gocd-contrib/docker-swarm-elastic-agents'
]

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
}

sourceSets {
    test {
        java {
            compileClasspath += configurations.compileOnly
            runtimeClasspath += configurations.compileOnly
            resources.srcDirs += ['src/main/resource-templates']
        }
    }
}

dependencies {
    compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '18.9.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'com.spotify', name: 'docker-client', version: '8.14.5'
    compile group: 'joda-time', name: 'joda-time', version: '2.10.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.28'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    testCompile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
}

processResources {
    from("src/main/resource-templates") {
        filesMatching('plugin.xml') {
            expand project.pluginDesc
        }

        filesMatching('plugin.properties') {
            expand project.pluginDesc
        }
    }
}

jar {
    from(configurations.compile) {
        into "lib/"
    }
}

tasks.withType(Jar) { jarTask ->
    preserveFileTimestamps = false
    reproducibleFileOrder = true

    ['MD5', 'SHA1', 'SHA-256'].each { algo ->
        jarTask.outputs.files("${jarTask.archivePath}.${algo}")
        jarTask.doLast {
            ant.checksum file: jarTask.archivePath, format: 'MD5SUM', algorithm: algo
        }
    }


    manifest {
        attributes(
                'Go-Version': project.pluginDesc.goCdVersion,
                'Plugin-Revision': project.pluginDesc.version,
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Source-Compatibility': project.sourceCompatibility,
                'Target-Compatibility': project.targetCompatibility
        )
    }
}

task deploy(type: Copy) {
    from jar
    into 'gocd/server/plugins/external'
}

github {
    owner = System.getenv('GITHUB_USER') ?: 'bob'
    repo = 'docker-swarm-elastic-agents'
    token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    tagName = project.ext.pluginVersion
    name = project.ext.pluginVersion
    targetCommitish = project.gitRevision
    body = """
      # Version ${project.ext.pluginVersion}

      See release notes at https://github.com/${github.owner}/${github.repo}/blob/master/CHANGELOG.md#${github.tagName.replaceAll(/[^A-Za-z0-9]/, '')}
    """.stripIndent().trim()

    assets = jar.outputs.files.files
}

githubRelease.dependsOn assemble
